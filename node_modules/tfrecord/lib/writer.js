"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protos_1 = require("./gen/protos");
const record_writer_1 = require("./record_writer");
// Reader for .tfrecord files containing TensorFlow training / prediction data.
class Writer {
    // Opens a TFRecord file and creates a RecordWriter around it.
    static async create(filePath) {
        const recordReader = await record_writer_1.RecordWriter.create(filePath);
        return new Writer(recordReader);
    }
    // Reads a tensorflow.Example protocol buffer.
    //
    // Returns null when the end of the file is reached. Otherwise, returns a
    // tfrecord.Example, which is the result of compiling TensorFlow's
    // example.proto with protobuf.js.
    //
    // It is unsafe to call read() before the Promise returned by a previous
    // read() call resolves.
    async writeExample(example) {
        const record = protos_1.tensorflow.Example.encode(example).finish();
        await this.recordWriter_.writeRecord(record);
    }
    // Closes the writer.
    //
    // Closing is idempotent.
    async close() {
        await this.recordWriter_.close();
    }
    // Use Writer.create or tfrecord.createWriter to obtain Writer instances.
    constructor(recordWriter) {
        this.recordWriter_ = recordWriter;
    }
}
exports.Writer = Writer;
//# sourceMappingURL=writer.js.map