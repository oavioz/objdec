"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ElementPart_1 = require("./ElementPart");
class Selector extends ElementPart_1.ElementPart {
    constructor(paper, boundRect, callbacks) {
        super(paper, boundRect);
        this.isEnabled = true;
        if (callbacks !== undefined) {
            this.callbacks = callbacks;
        }
        else {
            this.callbacks = {
                onLocked: null,
                onSelectionBegin: null,
                onSelectionEnd: null,
                onUnlocked: null,
            };
        }
    }
    enable() {
        if (!this.isEnabled) {
            this.isEnabled = true;
            this.show();
        }
    }
    disable() {
        if (this.isEnabled) {
            this.isEnabled = false;
            this.hide();
        }
    }
    subscribeToEvents(listeners) {
        listeners.forEach((e) => {
            e.base.addEventListener(e.event, this.enablify(e.listener.bind(this), e.bypass));
        });
    }
    enablify(f, bypass = false) {
        return (args) => {
            if (this.isEnabled || bypass) {
                f(args);
            }
        };
    }
    showAll(elements) {
        window.requestAnimationFrame(() => {
            elements.forEach((element) => {
                element.show();
            });
        });
    }
    hideAll(elements) {
        window.requestAnimationFrame(() => {
            elements.forEach((element) => {
                element.hide();
            });
        });
    }
    resizeAll(elementSet) {
        window.requestAnimationFrame(() => {
            elementSet.forEach((element) => {
                element.resize(this.boundRect.width, this.boundRect.height);
            });
        });
    }
}
exports.Selector = Selector;
//# sourceMappingURL=Selector.js.map