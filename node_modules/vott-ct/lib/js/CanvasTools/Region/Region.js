"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const RegionComponent_1 = require("./Component/RegionComponent");
class Region extends RegionComponent_1.RegionComponent {
    constructor(paper, paperRect = null, regionData, callbacks, id, tagsDescriptor, tagsUpdateOptions) {
        super(paper, paperRect, regionData, callbacks);
        this.styleSheet = null;
        this.ID = id;
        this.tags = tagsDescriptor;
        this.regionID = this.s8();
        this.styleID = `region_${this.regionID}_style`;
        this.styleSheet = this.insertStyleSheet();
        this.tagsUpdateOptions = tagsUpdateOptions;
        this.UI = [];
    }
    s8() {
        return Math.floor((1 + Math.random()) * 0x100000000).toString(16).substring(1);
    }
    insertStyleSheet() {
        var style = document.createElement("style");
        style.setAttribute("id", this.styleID);
        document.head.appendChild(style);
        return style.sheet;
    }
    removeStyles() {
        document.getElementById(this.styleID).remove();
    }
    onChange(component, regionData, state, multiSelection = false) {
        this.regionData.initFrom(regionData);
        this.redraw();
        super.onChange(this, this.regionData.copy(), state, multiSelection);
    }
    updateTags(tags, options) {
        this.tags = tags;
        this.tagsUpdateOptions = options;
    }
    move(arg1, arg2) {
        super.move(arg1, arg2);
        this.redraw();
    }
    resize(width, height) {
        super.resize(width, height);
        this.redraw();
    }
    redraw() {
        super.redraw();
        this.UI.forEach((element) => {
            element.redraw();
        });
    }
    freeze() {
        super.freeze();
        this.node.addClass('old');
        this.UI.forEach((element) => {
            element.freeze();
        });
    }
    unfreeze() {
        super.unfreeze();
        this.node.removeClass('old');
        this.UI.forEach((element) => {
            element.unfreeze();
        });
    }
}
exports.Region = Region;
//# sourceMappingURL=Region.js.map