/// <reference types="snapsvg" />
import { Point2D } from "../../Core/Point2D";
import { Rect } from "../../Core/Rect";
import { RegionData } from "../../Core/RegionData";
import { IRegionCallbacks } from "../../Interface/IRegionCallbacks";
import { RegionComponent } from "./RegionComponent";
export declare class AnchorsComponent extends RegionComponent {
    static DEFAULT_ANCHOR_RADIUS: number;
    static DEFAULT_GHOST_ANCHOR_RADIUS: number;
    protected anchors: Snap.Element[];
    protected anchorsNode: Snap.Element;
    protected ghostAnchor: Snap.Element;
    protected activeAnchorIndex: number;
    protected dragOrigin: Point2D;
    constructor(paper: Snap.Paper, paperRect: Rect, regionData: RegionData, callbacks: IRegionCallbacks);
    protected buildPointAnchors(): void;
    redraw(): void;
    freeze(): void;
    protected subscribeAnchorToEvents(anchor: Snap.Element, index: number): void;
    protected createAnchor(paper: Snap.Paper, x: number, y: number, style?: string, r?: number): Snap.Element;
    protected updateRegion(p: Point2D): void;
    protected anchorDragBegin(): void;
    protected anchorDragMove(dx: number, dy: number, x: number, y: number): void;
    protected anchorDragEnd(): void;
    protected onGhostPointerEnter(e: PointerEvent): void;
    protected onGhostPointerLeave(e: PointerEvent): void;
    protected onGhostPointerDown(e: PointerEvent): void;
    protected onGhostPointerMove(e: PointerEvent): void;
    protected onGhostPointerUp(e: PointerEvent): void;
}
